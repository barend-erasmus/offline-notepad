{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/repository.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<ul>\n  <li *ngFor=\"let tab of tabs; let index = index\" (click)=\"onClickTab(index)\">{{ tab }} <a (click)=\"onClickCloseTab(index)\" href=\"#\">Close</a></li>\n  <li (click)=\"onClickNewTab()\">New Tab</li>\n</ul>\n\n<textarea [(ngModel)]=\"content\" (keyup)=\"onChangeContent()\" rows=\"10\" cols=\"40\"></textarea>","import { Component, OnInit } from '@angular/core';\nimport { Repository } from './repository';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  public content: string = null;\n\n  public repository: Repository = new Repository();\n\n  public selectedTabIndex: number = null;\n\n  public tabs: string[] = null;\n\n  constructor() {}\n\n  public async ngOnInit(): Promise<void> {\n    this.tabs = await this.repository.listTabNames();\n\n    if (this.tabs.length === 0) {\n      this.addNewTab();\n\n      this.tabs = await this.repository.listTabNames();\n\n      this.selectedTabIndex = 0;\n    } else {\n      this.selectedTabIndex = 0;\n    }\n\n    this.updateTabContent();\n  }\n\n  public async onChangeContent(): Promise<void> {\n    await this.repository.updateTab(this.tabs[this.selectedTabIndex], this.content);\n  }\n\n  public async onClickCloseTab(index: number): Promise<void> {\n    this.repository.deleteTab(this.tabs[index]);\n\n    this.tabs = await this.repository.listTabNames();\n\n    this.selectedTabIndex = 0;\n\n    this.updateTabContent();\n  }\n\n  public async onClickNewTab(): Promise<void> {\n    this.addNewTab();\n\n    this.tabs = await this.repository.listTabNames();\n\n    this.selectedTabIndex = this.tabs.length - 1;\n  }\n\n  public onClickTab(index: number): void {\n    this.selectedTabIndex = index;\n\n    this.updateTabContent();\n  }\n\n  protected addNewTab(): void {\n    let index = 0;\n\n    let name = `new ${index}`;\n\n    while (this.tabs.indexOf(name) > -1) {\n      index++;\n\n      name = `new ${index}`;\n    }\n\n    this.repository.insertTab(name, null);\n  }\n\n  protected async updateTabContent(): Promise<void> {\n    const name: string = this.tabs[this.selectedTabIndex];\n\n    this.content = await this.repository.getTabContent(name);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import idb, { UpgradeDB, ObjectStore, Transaction, DB } from 'idb';\r\n\r\nexport class Repository {\r\n  protected static tabs: {} = {\r\n      'README': 'Hello World',\r\n  };\r\n\r\n  public async deleteTab(name: string): Promise<void> {\r\n    const objectStore: ObjectStore<any, any> = await this.getObjectStore();\r\n\r\n    await objectStore.delete(name);\r\n  }\r\n\r\n  public async getTabContent(name: string): Promise<string> {\r\n    const objectStore: ObjectStore<any, any> = await this.getObjectStore();\r\n\r\n    const tab: { content: string; id: string } = await objectStore.get(name);\r\n\r\n    if (!tab) {\r\n        return null;\r\n    }\r\n\r\n    return tab.content;\r\n  }\r\n\r\n  public async insertTab(name: string, content: string): Promise<void> {\r\n    const objectStore: ObjectStore<any, any> = await this.getObjectStore();\r\n\r\n    objectStore.add({\r\n        content,\r\n        id: name,\r\n    });\r\n  }\r\n\r\n  public async listTabNames(): Promise<Array<string>> {\r\n    const objectStore: ObjectStore<any, any> = await this.getObjectStore();\r\n\r\n    const tabs: Array<{ content: string; id: string }> = await objectStore.getAll();\r\n\r\n    return tabs.map((tab) => tab.id);\r\n  }\r\n\r\n  public async updateTab(name: string, content: string): Promise<void> {\r\n    const objectStore: ObjectStore<any, any> = await this.getObjectStore();\r\n\r\n    objectStore.put({\r\n        content,\r\n        id: name,\r\n    });\r\n  }\r\n\r\n  protected async getObjectStore(): Promise<ObjectStore<any, any>> {\r\n    const database: DB = await idb.open('offline-notepad-pp', 1, (upgradeDB: UpgradeDB) => {\r\n      upgradeDB.createObjectStore('tabs', { keyPath: 'id' });\r\n    });\r\n\r\n    const transaction: Transaction = database.transaction('tabs', 'readwrite');\r\n\r\n    const objectStore: ObjectStore<any, any> = transaction.objectStore('tabs');\r\n\r\n    return objectStore;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}